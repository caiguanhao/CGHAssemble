#!/bin/sh

set +e

NODE_VER="v0.10.25"
NODE_DIST="http://nodejs.org/dist/${NODE_VER}"

NPM_VER="1.3.25"
NPM_FILE="npm-${NPM_VER}.tgz"
NPM_DIST="http://nodejs.org/dist/npm/${NPM_FILE}"

if [ "$OS" = "Windows_NT" ]; then
  PLATFORM="win"
  if [ "$PROCESSOR_ARCHITEW6432" = "AMD64" ]; then
    ARCH="x64"
  else
    if [ "$PROCESSOR_ARCHITECTURE" = "AMD64" ]; then
      ARCH="x64"
    else
      if [ "$PROCESSOR_ARCHITECTURE" = "x86" ]; then
        ARCH="x86"
      fi
    fi
  fi
else
  UNAME_S="`uname -s`"
  if [ "$UNAME_S" = "Linux" ]; then
    PLATFORM="linux"
  fi
  if [ "$UNAME_S" = "Darwin" ]; then
    PLATFORM="darwin"
  fi
  ARCH="`which arch`"
  if [ ! -z "$ARCH" ]; then
    if [ "$(arch)" = "x86_64" ]; then
      ARCH="x64"
    else
      ARCH="x86"
    fi
  else
    ARCH="`uname -m`"
    if [ "$ARCH" = "x86_64" ]; then
      ARCH="x64"
    else
      ARCH="x86"
    fi
  fi
fi

while [ $# -gt 0 ]; do
  case "$1" in
    --platform|-p)
      shift
      if [ $# -gt 0 ]; then
        PLATFORM="$1"
        shift
      else
        echo "Missing platform [win,darwin,linux]."
        exit 1
      fi
      ;;
    --architecture|-arch|-a)
      shift
      if [ $# -gt 0 ]; then
        ARCH="$1"
        shift
      else
        echo "Missing architecture [x86,x64]."
        exit 1
      fi
      ;;
    *)
      echo "Please provide --platform [win,darwin,linux] and/or --architecture [x86,x64]."
      exit
      ;;
  esac
done

case "$PLATFORM-$ARCH" in
  win-x86)
    NODE_FILE="node.exe"
    NODE_DIST="${NODE_DIST}/${NODE_FILE}"
    ;;
  win-x64)
    NODE_FILE="node.exe"
    NODE_DIST="${NODE_DIST}/x64/${NODE_FILE}"
    ;;
  linux-x86|linux-x64|darwin-x86|darwin-x64)
    NODE_TAR_GZ="node-${NODE_VER}-${PLATFORM}-${ARCH}.tar.gz"
    NODE_FILE="$NODE_TAR_GZ"
    NODE_DIST="${NODE_DIST}/${NODE_FILE}"
    ;;
  *)
    echo "No such platform/architecture."
    exit 1
    ;;
esac

DOWNLOAD="$(which curl) -# -C - -L -o temp"
if [ -z "$DOWNLOAD" ]; then
  DOWNLOAD="$(which wget) --continue -O temp"
fi

if [ ! -f "$NODE_FILE" ]; then
  echo Downloading $NODE_DIST ...
  $DOWNLOAD $NODE_DIST
  mv "temp" "$NODE_FILE"
fi

if [ ! -z "$NODE_TAR_GZ" ]; then

  echo "Extracting archive..."
  tar xfvz "$NODE_TAR_GZ" > /dev/null

  echo "Copying ${NODE_TAR_GZ%.*.*}/bin/node to node.exe..."
  cp "${NODE_TAR_GZ%.*.*}/bin/node" "node.exe"

  echo "Remove ${NODE_TAR_GZ%.*.*}..."
  rm -rf "${NODE_TAR_GZ%.*.*}"

fi

if [ ! -d "npm" ]; then
  if [ ! -f "$NPM_FILE" ]; then
    echo Downloading $NPM_DIST ...
    $DOWNLOAD $NPM_DIST
    mv "temp" "$NPM_FILE"
  fi
  tar xfvz "$NPM_FILE" > /dev/null
fi

if [ ! -d "grunt-cli" ]; then
  "./node.exe" "npm/cli.js" install grunt-cli
  mv "node_modules/grunt-cli" .
  rm -rf "node_modules"
fi

echo "Done."
